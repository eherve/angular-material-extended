/** @format */

@use '@angular/material' as mat;

:host {
  overflow: hidden;
  display: flex;
  position: relative;
  max-height: 100%;

  --ngx-mat-datatable-background: #ffffff;
  --ngx-mat-datatable-border-color: #ccc;
  --ngx-mat-datatable-sticky-background: var(--ngx-mat-datatable-background);
  --ngx-mat-datatable-sticky-border: 1px dashed #e6a93a;
}

#container {
  display: flex;
  flex: 1 1 100%;
  box-sizing: border-box;
  flex-direction: column;
  position: relative;
  overflow: hidden;
  width: 100%;

  background-color: var(--ngx-mat-datatable-background);
}

#head {
  width: 100%;
  display: flex;
  box-sizing: border-box;
  place-content: end space-between;
  align-items: end;
  flex-direction: row;
  border-bottom: 1px solid var(--ngx-mat-datatable-border-color);

  #head-start,
  #head-center,
  #head-end {
    display: flex;
    box-sizing: border-box;
    align-items: end;
    flex-direction: row;
  }
  #head-start {
    place-content: end start;
  }
  #head-center {
    place-content: end center;
  }
  #head-end {
    place-content: end end;
  }

  .action {
    position: relative;
    .action-loader {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    &.user-action {
      .mat-mdc-icon-button {
        @include mat.icon-button-overrides(
          (
            icon-color: var(--action-color, var(--mat-sys-primary)),
          )
        );
      }
    }
  }
}

#column-options {
  .column-options-item {
    overflow: hidden;
    display: flex;
    box-sizing: border-box;
    align-items: center;
    flex-direction: row;
    place-content: center start;

    button.toggle-off {
      --mdc-icon-button-icon-color: var(--mdc-icon-button-disabled-icon-color);
    }
    mat-icon.handle {
      color: var(--mdc-icon-button-disabled-icon-color);
    }
  }
}

#table-container {
  flex: 1 1 100%;
  overflow: auto;
  width: 100%;
  scrollbar-width: thin;
}

#table {
  width: 100%;
  max-height: 100%;
  --mat-table-background-color: var(--ngx-mat-datatable-background);
  --mat-table-row-item-outline-color: var(--ngx-mat-datatable-border-color);

  ::ng-deep {
    .mat-mdc-table-sticky {
      opacity: 1;
      background: var(--ngx-mat-datatable-sticky-background, var(--ngx-mat-datatable-background, #ffffff));
      &.mat-mdc-table-sticky-border-elem-left {
        border-right: var(--ngx-mat-datatable-sticky-border);
      }
    }

    .mat-mdc-header-cell {
      padding: 0 8px;

      mat-form-field {
        min-width: auto;
        flex: 1 1 100%;
        --mdc-filled-text-field-active-indicator-color: #999;
        --mat-form-field-hover-state-layer-opacity: 0;
        --mdc-filled-text-field-container-shape: 0;
        --mdc-filled-text-field-container-color: var(--ngx-mat-datatable-background);

        ::ng-deep {
          .mat-mdc-form-field-bottom-align {
            display: none;
          }

          .mat-mdc-text-field-wrapper {
            padding: 0;
          }
        }
      }
    }

    .mat-mdc-cell {
      padding: 0 8px;
    }

    .mat-mdc-row {
      &.has-click {
        cursor: pointer;
        &:hover {
          .mat-mdc-cell {
            color: var(--ngx-mat-datatable-hover-color, var(--mat-sys-on-primary)) !important;
            background-color: var(--ngx-mat-datatable-hover-bgcolor, var(--mat-sys-primary)) !important;
          }
        }
      }

      &:last-child {
        .mat-mdc-cell {
          border-bottom-color: var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));
          border-bottom-width: var(--mat-table-row-item-outline-width, 1px);
          border-bottom-style: solid;
        }
      }
    }
  }

  .header-container {
    display: flex;
    box-sizing: border-box;
    place-content: center start;
    align-items: center;
    flex-direction: row;
    width: 100%;
    min-height: var(--mat-form-field-container-height, 56px);
    margin: 6px 0;
  }

  .header {
    width: 100%;
    display: flex;
    box-sizing: border-box;
    place-content: center space-between;
    align-items: center;
    flex-direction: row;

    .header-actions {
      .sort-btn {
        --mat-badge-container-size: 12px;
        --mat-badge-line-height: 16px;
        --mat-badge-text-size: 10px;
        --mat-badge-legacy-container-size: 18px;
      }
    }
  }

  .cell {
    display: flex;
    box-sizing: border-box;
    place-content: center start;
    align-items: center;
    flex-direction: row;
    width: 100%;
    & > * {
      display: inline-flex;
    }
  }
}

#paginator {
  --mat-paginator-container-background-color: var(--ngx-mat-datatable-background);
  --mat-form-field-container-height: 24px;
  --mat-form-field-container-vertical-padding: 4px;
  --mat-paginator-container-size: 46px;
  border-top: 1px solid var(--ngx-mat-datatable-border-color);

  ::ng-deep {
    .mat-mdc-select {
      display: flex;
      height: 24px;
    }
    .mat-mdc-paginator-touch-target {
      height: 24px;
    }

    .mat-mdc-paginator-range-actions {
      button {
        --mdc-icon-button-state-layer-size: 36px;
        padding: 6px;
      }
    }
  }
}

#loading {
  position: absolute;
  z-index: 200;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.16);
  display: flex;
  box-sizing: border-box;
  place-content: center center;
  align-items: center;
  flex-direction: row;
}

::ng-deep {
  .mat-mdc-icon-button[mat-icon-button][size='small'] {
    --mdc-icon-button-state-layer-size: 30px;
    --mdc-icon-button-icon-size: 18px;

    .mat-mdc-button-touch-target {
      height: 36px;
      width: 36px;
    }

    mat-icon {
      height: 18px;
      width: 18px;
      font-size: 18px;
    }
  }
}

.row {
  display: flex;
  box-sizing: border-box;
  place-content: center start;
  align-items: center;
  flex-direction: row;
}

#no-data {
  position: sticky;
  width: fit-content;
  left: 50%;
  #no-data-label {
    position: relative;
    margin-left: -50%;
  }
}

.facet {
  margin: 8px;
  --mdc-elevated-card-container-color: transparent;

  mat-card-content {
    display: flex;
    box-sizing: border-box;
    place-content: center center;
    align-items: center;
    flex-direction: row;
    flex-wrap: wrap;
    padding: 4px;
  }

  .facet-indicator {
    display: flex;
    box-sizing: border-box;
    flex-direction: column;
    place-content: center center;
    align-items: center;
    position: relative;
    margin: 4px;

    &.has-action {
      cursor: pointer;
    }

    .facet-indicator-label {
      max-width: 100%;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      line-height: 1em;
      padding: 2px;
    }
  }
}

.chips-facet {
  margin-right: 8px;

  .chip-facet {
    overflow: hidden;
    --test-color: contrast-color(currentColor);
    @include mat.chips-overrides(
      (
        label-text-color: var(--facet-color),
        outline-color: var(--facet-color),
      )
    );

    &.has-action {
      cursor: pointer;
    }

    ::ng-deep {
      .mat-mdc-chip-action,
      .mat-mdc-standard-chip {
        cursor: inherit;
        padding: 0;
      }
      .mat-mdc-chip-action-label {
        height: 100%;
        width: 100%;
      }
    }

    .chip-facet-content {
      width: 100%;
      display: flex;
      box-sizing: border-box;
      place-content: center space-between;
      align-items: center;
      flex-direction: row;

      height: 100%;
      width: 100%;

      .chip-facet-key,
      .chip-facet-value {
        height: 100%;
        padding-left: 8px;
        padding-right: 8px;
        display: flex;
        box-sizing: border-box;
        place-content: center space-between;
        align-items: center;
        flex-direction: row;
      }
      .chip-facet-key {
        background-color: var(--mdc-chip-label-text-color);
        color: var(--facet-label-color, var(--mdc-chip-elevated-container-color));
      }
      .chip-facet-value {
        color: var(--facet-value-color, var(--mdc-chip-label-text-color));
      }
    }
  }
}
